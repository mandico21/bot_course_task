from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.callback_data import CallbackData

from tgbot.misc.markup_constructor.inline import InlineMarkupConstructor


class UsersInlineMarkup(InlineMarkupConstructor):

    def menu(self, is_admin: bool) -> InlineKeyboardMarkup:
        schema = [2, 1]
        actions = [
            {'text': 'üõí –ö–∞—Ç–∞–ª–æ–≥', 'switch_inline_query_current_chat': ''},
            {'text': 'üì® –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤–∑—è—å', 'callback_data': 'feedback_user'},
            {'text': 'üåê –†–µ—Ñ–µ—Ä–∞–ª–∫–∞', 'callback_data': 'referrer_user'},
        ]
        if is_admin:
            schema = [2, 1, 1]
            actions.append({'text': 'üîê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å', 'callback_data': 'admin_panel'})
        return self.markup(actions, schema)


    def referral(self, condition: str) -> InlineKeyboardMarkup:
        schema = [1]
        actions = [
            {'text': '‚óÄÔ∏è –ù–∞–∑–∞–¥', 'callback_data': 'back_button'},
        ]
        if condition is None:
            schema = [1, 1]
            actions.insert(0, {'text': 'üîê –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è', 'callback_data': 'install_referral_code'})
        return self.markup(actions, schema)


    def register(self) -> InlineKeyboardMarkup:
        schema = [1]
        actions = [
            {'text': 'üîë –ö–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è', 'callback_data': 'invitation_code'},
        ]
        return self.markup(actions, schema)

class AdminsInlineMarkup(InlineMarkupConstructor):

    def menu(self) -> InlineKeyboardMarkup:
        schema = [2, 1, 1]
        actions = [
            {'text': 'üéÅ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', 'callback_data': 'add_product'},
            {'text': 'üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', 'callback_data': 'edit_product'},
            {'text': 'üì¢ –†–∞—Å—Å—ã–ª–∫–∞', 'callback_data': 'mailing'},
            {'text': 'üóÇ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'callback_data': 'back_button'},
        ]
        return self.markup(actions, schema)


class ToolsInlineMarkup(InlineMarkupConstructor):

    def negotiate(self) -> InlineKeyboardMarkup:
        schema = [2]
        actions = [
            {'text': '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'callback_data': 'nego_confirm'},
            {'text': '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'callback_data': 'nego_cancel'}
        ]
        return self.markup(actions, schema)


    def back(self) -> InlineKeyboardMarkup:
        schema = [1]
        actions = [
            {'text': '‚óÄÔ∏è –ù–∞–∑–∞–¥', 'callback_data': 'back_button'},
        ]
        return self.markup(actions, schema)


    def cancel(self) -> InlineKeyboardMarkup:
        schema = [1]
        actions = [
            {'text': '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'callback_data': 'cancel'}
        ]
        return self.markup(actions, schema)


