from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message

from tgbot.keyboards.inline.inline import UsersInlineMarkup
from tgbot.models.users import User


async def show_referral(call: CallbackQuery, user: User):
    await call.answer()
    sessionmaker = call.bot.get('db')
    bot_username = await call.bot.me
    count_referrals = await user.count_referrals(sessionmaker, user)

    await call.message.edit_text(f'üíé –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {count_referrals}\n'
                                 f'üí∞ –ë–∞–ª–∞–Ω—Å: {user.balance} ‚ÇΩ\n'
                                 f'üéü –í–∞—à –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: {user.invite_code}\n'
                                 f'üé´ –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: t.me/{bot_username.username}?start={call.from_user.id}\n',
                                 reply_markup=UsersInlineMarkup().referral(user.invite_code))


async def install_referral_code(call: CallbackQuery, state: FSMContext):
    await call.answer()
    await call.message.edit_text(f'‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ\n'
                              f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–¥–∞ 5 —Å–∏–º–≤–æ–ª–æ–≤\n'
                              f'–ö–æ–¥ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏—à—å 1 —Ä–∞–∑. –ü–æ–º–µ–Ω—è—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è!')
    await state.set_state('invite_install')


async def install_referral_code2(message: Message, state: FSMContext, user: User):
    if len(message.text) > 5:
        return await message.answer(f'‚ùå –û—à–∏–±–∫–∞\n–î–ª–∏–Ω–∞ –±–æ–ª–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤\n'
                                    f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')

    sessionmaker = message.bot.get('db')
    code_check = await user.get_user_code(sessionmaker, str(message.text))
    if code_check is not None:
        return await message.answer(f'‚ùå –û—à–∏–±–∫–∞\n–≠—Ç–æ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ —É–∂–µ –∑–∞–Ω—è—Ç–æ!\n'
                                    f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ.\n')

    await user.update_user(sessionmaker, updated_fields={'invite_code': message.text})
    await message.answer(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ!\n'
                         f'<i><b>‚û°Ô∏è {message.text}</b></i>')
    await message.answer(f'üóÇ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', reply_markup=UsersInlineMarkup().menu(user.admin))
    await state.finish()


def register_referral(dp: Dispatcher):
    dp.register_callback_query_handler(show_referral, text="referrer_user")
    dp.register_callback_query_handler(install_referral_code, text="install_referral_code")
    dp.register_message_handler(install_referral_code2, state="invite_install")
